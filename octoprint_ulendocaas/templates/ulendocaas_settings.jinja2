<div class="card">
  <div class="card-body">
    <h3 class="card-title">Ulendo CaaS Calibration Plugin Settings</h3>
    <p class="card-text">Ulendo CaaS allows you to automatically tune the vibration compensation algorithms
      in Marlin's FTM (Fixed-Time-Motion) module. Vibration compensation can improve the performance of your printer
      and help you achieve lower print times by improving printer reliability at higher speeds and accelerations.</p>
  </div>
</div>


<form class="form-horizontal">

  
  <p class="card-text">Select calibration service settings below. For automatic calibration, users must have a valid combination of access credentials from Ulendo. Enter them below.</p>
  <div class="control-group">
    <div class="controls">
      <label class="checkbox">
        <input type="checkbox" data-bind="checked: settings.plugins.ulendocaas.use_caas_service"> {{
        _('Connect to Autocalibration Service') }}
        <div class="help-block">{{ _('Select to connect to the autocalibration service. If left unselected, the
         manual calibration features will be available.') }}</div>
      </label>
    </div>
  </div>

  <div class="control-group">
    <label class="control-label">{{ _('ORG') }}</label>
    <div class="controls">
      <input type="text" class="form-control input-block-level" data-bind="value: settings.plugins.ulendocaas.ORG">
    </div>
  </div>
  <div class="control-group">
    <label class="control-label">{{ _('ACCESSID') }}</label>
    <div class="controls">
      <input type="text" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.ACCESSID">
    </div>
  </div>
  <p class="card-text">Enter a useful label to identify your machine. This information will be used to sort and
    identify your machine in the CaaS Central Admin Panel.</p>
  <div class="control-group">
    <label class="control-label">{{ _('MACHINEID') }}</label>
    <div class="controls">
      <input type="text" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.MACHINEID">
    </div>
  </div>
  <div class="control-group">
    <label class="control-label">{{ _('MODELID') }}</label>
    <div class="controls">
      <input type="text" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.MODELID">
    </div>
  </div>
  <div class="control-group">
    <label class="control-label">{{ _('MANUFACTURER_NAME') }}</label>
    <div class="controls">
      <input type="text" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.MANUFACTURER_NAME">
    </div>
  </div>


  <div class="control-group">
    <div class="controls">
      <label class="checkbox">
        <input type="checkbox" data-bind="checked: settings.plugins.ulendocaas.share_calibration_data"> {{
        _('Share Calibration Data') }}
        <div class="help-block">{{ _('Select to share calibration data when using manual calibration features to help improve the plugin.') }}</div>
      </label>
    </div>
  </div>

  <div class="accelerometer_options">
    <div><a href="#" class="muted"
        data-bind="toggleContent: { class: 'fa-caret-right fa-caret-down', parent: '.accelerometer_options', container: '.hide' }"><i
          class="fas fa-caret-right"></i> {{ _('Configure Accelerometer') }}</a></div>
    <div class="hide">

      <div class="control-group">
          <label class="control-label" for="settings-acclerometer_device">{{ _('Device') }}</label>
          <div class="controls">
              <select id="settings-acclerometer_device" data-bind="value: settings.plugins.ulendocaas.accelerometer_device">
                  <option value="ADXL345">ADXL345</option>
              </select>
              <span class="help-inline">{% trans %}Select the acclerometer device to use.{% endtrans %}</span>
          </div>
      </div>

      <div class="control-group">
          <label class="control-label" for="settings-acclerometer_range">{{ _('Range') }}</label>
          <div class="controls">
              <select id="settings-acclerometer_range" data-bind="value: settings.plugins.ulendocaas.accelerometer_range">
                  <option value="+/-2g">+/-2g</option>
                  <option value="+/-4g">+/-4g</option>
                  <option value="+/-8g">+/-8g</option>
                  <option value="+/-16g">+/-16g</option>
              </select>
              <span class="help-inline">{% trans %}Select the acclerometer range to use.{% endtrans %}</span>
          </div>
      </div>

      <div class="control-group">
          <label class="control-label" for="settings-acclerometer_rate">{{ _('Rate') }}</label>
          <div class="controls">
              <select id="settings-acclerometer_rate" data-bind="value: settings.plugins.ulendocaas.accelerometer_rate">
                  <option value="1600Hz">1600Hz</option>
                  <option value="800Hz">800Hz</option>
                  <option value="400Hz">400Hz</option>
                  <option value="200Hz">200Hz</option>
              </select>
              <span class="help-inline">{% trans %}Select the acclerometer rate to use.{% endtrans %}</span>
          </div>
      </div>

    </div>
  </div>


  <div class="profile_options">
    <div><a href="#" class="muted"
        data-bind="toggleContent: { class: 'fa-caret-right fa-caret-down', parent: '.profile_options', container: '.hide' }"><i
          class="fas fa-caret-right"></i> {{ _('Calibration profile options (advanced)') }}</a></div>
    <div class="hide">

      <div class="control-group">
        <div class="controls">
          <label class="checkbox">
            <input type="checkbox" data-bind="checked: settings.plugins.ulendocaas.home_axis_before_calibration"> {{
            _('Home Axis Before Calibrating') }}
            <div class="help-block"> <label class="label label-important">{{ _("Caution") }}</label> {{ _(' Disabling
              this may damage your machine. Use this if you want to center the axis yourself before starting the
              calibration.') }}</div>
          </label>
        </div>
      </div>


      <div class="control-group">
        <label class="control-label">{{ _('Acceleration Amplitude') }}</label>
        <div class="controls">
          <div class="input-append">
            <input type="number" min="500" max="20000" class="input-block-level"
              data-bind="value: settings.plugins.ulendocaas.acceleration_amplitude" onchange="enforceRange(this)">
            <span class="add-on">mm/sec/sec</span>
          </div>
          <div class="help-block"> <label class="label label-important">{{ _("Caution") }}</label> {{ _(' Setting this
            too high may damage your machine. If changing, increase gradually from the default value. This sets the
            acceleration amplitude at which the calibration is performed. It is suggested to roughly match this with
            your intended printing acceleration, but it should be lowered if you notice your printer skipping steps
            during the calibration routine.') }}</div>
        </div>
      </div>

      <div class="control-group">
        <label class="control-label">{{ _('Starting Frequency') }}</label>
        <div class="controls">
          <div class="input-append">
            <input type="number" min="1" max="5" class="input-block-level" {# NOTE: The maximum value must align with the weak signal check. #}
              data-bind="value: settings.plugins.ulendocaas.starting_frequency" onchange="enforceRange(this)">
            <span class="add-on">Hz</span>
          </div>
          <div class="help-block"> <label class="label label-important">{{ _("Caution") }}</label> {{ _(' Setting this
            too low may damage your machine. If changing, decrement gradually from the default value.') }}</div>
        </div>
      </div>

      <div class="control-group">
        <label class="control-label">{{ _('Frequency Sweep Rate') }}</label>
        <div class="controls">
          <div class="input-append">
            <input type="number" min="1" max="100" class="input-block-level"
              data-bind="value: settings.plugins.ulendocaas.frequency_sweep_rate" onchange="enforceRange(this)">
            <span class="add-on">Hz/sec</span>
          </div>
          <div class="help-block">{{ _('Rate at which the machine will increase excitation frequency from the starting
            frequency. Increase this to collect more data and potentially refine your results.') }}</div>
        </div>
      </div>

      <div class="control-group">
        <div class="controls">
          <label class="checkbox">
            <input type="checkbox" data-bind="checked: settings.plugins.ulendocaas.override_end_frequency"> {{
            _('Override End Frequency') }}
            <div class="help-block">{{ _('Enables overriding the end frequency with the value below. Not recommended as
              the plugin computes the correct value for you. If you want to speed things up, use the frequency sweep
              rate setting instead.') }}</div>
          </label>
        </div>
      </div>

      <div class="control-group">
        <label class="control-label">{{ _('End Frequency Override') }}</label>
        <div class="controls">
          <div class="input-append">
            <input type="number" min="20" max="800" class="input-block-level" {# NOTE: The minimum value must align with the weak signal check. #}
              data-bind="value: settings.plugins.ulendocaas.end_frequency_override" onchange="enforceRange(this)">
            <span class="add-on">Hz</span>
          </div>
          <div class="help-block">{{ _('End frequency used if the override is enabled.') }}</div>
        </div>
      </div>

      <div class="control-group">
        <label class="control-label">{{ _('Step Time') }}</label>
        <div class="controls">
          <div class="input-append">
            <input type="number" min="10" max="1000" class="input-block-level"
              data-bind="value: settings.plugins.ulendocaas.step_time" onchange="enforceRange(this)">
            <span class="add-on">msec</span>
          </div>
          <div class="help-block"> <label class="label label-important">{{ _("Caution") }}</label> {{ _(' Setting this
            too high may damage your machine. If changing, increase gradually from the default value. Controls duration
            of the profile\'s opening and closing movements.') }}</div>
        </div>
      </div>

      <div class="control-group">
        <label class="control-label">{{ _('Step Acceleration') }}</label>
        <div class="controls">
          <div class="input-append">
            <input type="number" min="500" max="20000" class="input-block-level"
              data-bind="value: settings.plugins.ulendocaas.step_acceleration" onchange="enforceRange(this)">
            <span class="add-on">mm/sec/sec</span>
          </div>
          <div class="help-block"> <label class="label label-important">{{ _("Caution") }}</label> {{ _('Setting this
            too high may damage your machine. If changing, increase gradually from the default value. Controls
            acceleration of the profile\'s opening and closing movements.') }}</div>
        </div>
      </div>

      <div class="control-group">
        <label class="control-label">{{ _('Delay 1 Time') }}</label>
        <div class="controls">
          <div class="input-append">
            <input type="number" min="1" max="10000" class="input-block-level"
              data-bind="value: settings.plugins.ulendocaas.delay1_time" onchange="enforceRange(this)">
            <span class="add-on">msec</span>
          </div>
          <div class="help-block">{{ _('Controls the time delay between moving to axis center and starting the
            calibration profile.') }}</div>
        </div>
      </div>

      <div class="control-group">
        <label class="control-label">{{ _('Delay 2 Time') }}</label>
        <div class="controls">
          <div class="input-append">
            <input type="number" min="1" max="10000" class="input-block-level"
              data-bind="value: settings.plugins.ulendocaas.delay2_time" onchange="enforceRange(this)">
            <span class="add-on">msec</span>
          </div>
          <div class="help-block">{{ _('Controls the time delay the opening movement and the frequency sweep.') }}</div>
        </div>
      </div>

      <div class="control-group">
        <label class="control-label">{{ _('Delay 3 Time') }}</label>
        <div class="controls">
          <div class="input-append">
            <input type="number" min="1" max="10000" class="input-block-level"
              data-bind="value: settings.plugins.ulendocaas.delay3_time" onchange="enforceRange(this)">
            <span class="add-on">msec</span>
          </div>
          <div class="help-block">{{ _('Controls the time delay between the sweep and the closing movement.') }}</div>
        </div>
      </div>

    </div>
  </div>



  <div class="debugging_options">
    <div><a href="#" class="muted"
        data-bind="toggleContent: { class: 'fa-caret-right fa-caret-down', parent: '.debugging_options', container: '.hide' }"><i
          class="fas fa-caret-right"></i> {{ _('Debugging options (advanced)') }}</a></div>
    <div class="hide">

      <div class="control-group">
        <div class="controls">
          <label class="checkbox">
            <input type="checkbox" data-bind="checked: settings.plugins.ulendocaas.save_post_data_locally"> {{
            _('Save Calibration Data Locally') }}
            <div class="help-block"> {{ _('Creates a local file with the calibration data for debugging purposes.') }}</div>
          </label>
        </div>
      </div>

      <div class="control-group">
        <div class="controls">
          <label class="checkbox">
            <input type="checkbox" data-bind="checked: settings.plugins.ulendocaas.log_routine_debug_info"> {{
            _('Log routine debugging info.') }}
            <div class="help-block"> {{ _('Generates logger info messages with routine control information.') }}</div>
          </label>
        </div>
      </div>

    </div>
  </div>
</form>

<script>
  function enforceRange(input) {

    const min = Number(input.min);
    const max = Number(input.max);
    console.log("value", input.value)
    if (Number(input.value) < min) {
      input.value = min; // reset to lower bound if below range
    } else if (Number(input.value) > max) {
      input.value = max; // vice versa
    }
  }
</script>