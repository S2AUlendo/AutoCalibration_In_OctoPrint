<div class="card">
  <div class="card-body">
    <h3 class="card-title">Ulendo CaaS Calibration Plugin Settings</h3>
      <p class="card-text">Ulendo CaaS allows you to automatically tune the vibration compensation algorithms 
      in Marlin's FTM (Fixed-Time-Motion) module. Vibration compensation can improve the performance of your printer
      and help you achieve lower print times by improving printer reliability at higher speeds and accelerations.</p>
      <p>Users must have a valid combination of access credentials provided by the Ulendo team to use this plugin.</p>
      <p>Enter the credentials in the space provided below to get started.</p>
  </div>
</div>
<form class="form-horizontal">
    <div class="control-group">     
        <label class="control-label">{{ _('ORG') }}</label>
        <div class="controls">
			<input type="text" class="form-control input-block-level" data-bind="value: settings.plugins.ulendocaas.ORG">
        </div>
	</div>
	<div class="control-group">     
        <label class="control-label">{{ _('ACCESSID') }}</label>
        <div class="controls">            
			<input type="text" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.ACCESSID">
        </div>
	</div>
  <p class="card-text">Use a useful label to identify your machine. This information will be used to sort and 
  identify your machine in the CaaS Central Admin Panel.</p>
	<div class="control-group">             
    <label class="control-label">{{ _('MACHINEID') }}</label>
        <div class="controls">            
			<input type="text" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.MACHINEID">
        </div>
    </div>
  <div class="control-group">
    <label class="control-label">{{ _('MODELID') }}</label>
    <div class="controls">
      <input type="text" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.MODELID">
    </div>
  </div>
  <div class="control-group">
    <label class="control-label">{{ _('MANUFACTURER_NAME') }}</label>
    <div class="controls">
      <input type="text" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.MANUFACTURER_NAME">
    </div>
  </div>



  <div class="profile_options">
        <div><a href="#" class="muted" data-bind="toggleContent: { class: 'fa-caret-right fa-caret-down', parent: '.profile_options', container: '.hide' }"><i class="fas fa-caret-right"></i> {{ _('Calibration profile options (advanced)') }}</a></div>
        <div class="hide">

          <div class="control-group">
            <div class="controls">
              <label class="checkbox">
                <input type="checkbox" data-bind="checked: settings.plugins.ulendocaas.home_axis_before_calibration"> {{ _('Home Axis Before Calibrating') }}
                <div class="help-block">  <label class="label label-important">{{ _("Caution") }}</label> {{ _(' Disabling this may damage your machine. Use this if you want to center the axis yourself before starting the calibration.') }}</div>
              </label>
            </div>
          </div>

          
          <div class="control-group">
            <label class="control-label">{{ _('Acceleration Amplitude') }}</label>
            <div class="controls">
              <div class="input-append">
                <input type="number" min="500" max="20000" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.acceleration_amplitude" onchange="enforceRange(this)">
                <span class="add-on">mm/sec/sec</span>
              </div>
              <div class="help-block"> <label class="label label-important">{{ _("Caution") }}</label> {{ _(' Setting this too high may damage your machine. If changing, increase gradually from the default value. This sets the acceleration amplitude at which the calibration is performed. It is suggested to roughly match this with your intended printing acceleration, but it should be lowered if you notice your printer skipping steps during the calibration routine.') }}</div>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label">{{ _('Starting Frequency') }}</label>
            <div class="controls">
              <div class="input-append">
                <input type="number" min="1" max="5" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.starting_frequency" onchange="enforceRange(this)">
                <span class="add-on">Hz</span>
              </div>
              <div class="help-block"> <label class="label label-important">{{ _("Caution") }}</label> {{ _(' Setting this too low may damage your machine. If changing, decrement gradually from the default value.') }}</div>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label">{{ _('Frequency Sweep Rate') }}</label>
            <div class="controls">
              <div class="input-append">
                <input type="number" min="1" max="100" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.frequency_sweep_rate" onchange="enforceRange(this)">
                <span class="add-on">Hz/sec</span>
              </div>
              <div class="help-block">{{ _('Rate at which the machine will increase excitation frequency from the starting frequency. Increase this to collect more data and potentially refine your results.') }}</div>
            </div>
          </div>

          <div class="control-group">
            <div class="controls">
              <label class="checkbox">
                <input type="checkbox" data-bind="checked: settings.plugins.ulendocaas.override_end_frequency"> {{ _('Override End Frequency') }}
                <div class="help-block">{{ _('Enables overriding the end frequency with the value below. Not recommended as the plugin computes the correct value for you. If you want to speed things up, use the frequency sweep rate setting instead.') }}</div>
              </label>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label">{{ _('End Frequency Override') }}</label>
            <div class="controls">
              <div class="input-append">
                <input type="number" min="10" max="800" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.end_frequency_override" onchange="enforceRange(this)">
                <span class="add-on">Hz</span>
              </div>
              <div class="help-block">{{ _('End frequency used if the override is enabled.') }}</div>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label">{{ _('Step Time') }}</label>
            <div class="controls">
              <div class="input-append">
                <input type="number" min="10" max="1000" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.step_time" onchange="enforceRange(this)">
                <span class="add-on">msec</span>
              </div>
              <div class="help-block"> <label class="label label-important">{{ _("Caution") }}</label> {{ _(' Setting this too high may damage your machine. If changing, increase gradually from the default value. Controls duration of the profile\'s opening and closing movements.') }}</div>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label">{{ _('Step Acceleration') }}</label>
            <div class="controls">
              <div class="input-append">
                <input type="number" min="500" max="20000" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.step_acceleration" onchange="enforceRange(this)">
                <span class="add-on">mm/sec/sec</span>
              </div>
              <div class="help-block"> <label class="label label-important">{{ _("Caution") }}</label> {{ _('Setting this too high may damage your machine. If changing, increase gradually from the default value. Controls acceleration of the profile\'s opening and closing movements.') }}</div>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label">{{ _('Delay 1 Time') }}</label>
            <div class="controls">
              <div class="input-append">
                <input type="number" min="1" max="10000" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.delay1_time" onchange="enforceRange(this)">
                <span class="add-on">msec</span>
              </div>
              <div class="help-block">{{ _('Controls the time delay between moving to axis center and starting the calibration profile.') }}</div>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label">{{ _('Delay 2 Time') }}</label>
            <div class="controls">
              <div class="input-append">
                <input type="number" min="1" max="10000" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.delay2_time" onchange="enforceRange(this)">
                <span class="add-on">msec</span>
              </div>
              <div class="help-block">{{ _('Controls the time delay the opening movement and the frequency sweep.') }}</div>
            </div>
          </div>

          <div class="control-group">
            <label class="control-label">{{ _('Delay 3 Time') }}</label>
            <div class="controls">
              <div class="input-append">
                <input type="number" min="1" max="10000" class="input-block-level" data-bind="value: settings.plugins.ulendocaas.delay3_time" onchange="enforceRange(this)">
                <span class="add-on">msec</span>
              </div>
              <div class="help-block">{{ _('Controls the time delay between the sweep and the closing movement.') }}</div>
            </div>
          </div>

        </div>
    </div>
</form>

<script>
  function enforceRange(input) {

    const min = input.min;
    const max = input.max;

    if (input.value < input.min) {
      input.value = min; // reset to lower bound if below range
    } else if (input.value > input.max) {
      input.value = max; // vice versa
    }
  }
</script>